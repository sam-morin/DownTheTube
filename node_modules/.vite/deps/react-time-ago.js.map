{
  "version": 3,
  "sources": ["../../performance-now/lib/src/performance-now.coffee", "../../raf/index.js", "../../react-time-ago/source/ReactTimeAgo.js", "../../react-time-ago/source/Time.js", "../../react-time-ago/source/useTimeAgo.js", "../../memoize-one/dist/memoize-one.esm.js", "../../react-time-ago/source/helpers/locale.js", "../../react-time-ago/source/helpers/cache.js", "../../react-time-ago/source/helpers/getVerboseDateFormatter.js", "../../react-time-ago/source/helpers/date.js", "../../react-time-ago/source/helpers/getTimeAgo.js", "../../react-time-ago/source/Updater.js", "../../react-time-ago/source/helpers/binarySearch.js", "../../react-time-ago/source/PropTypes.js"],
  "sourcesContent": [null, "var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n", "import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Time from './Time.js'\r\nimport useTimeAgo from './useTimeAgo.js'\r\n\r\nimport { style as styleType } from './PropTypes.js'\r\n\r\nfunction ReactTimeAgo({\r\n\tdate: dateProperty,\r\n\tfuture,\r\n\ttimeStyle,\r\n\tround,\r\n\tminTimeLeft,\r\n\tlocale,\r\n\tlocales = [],\r\n\tformatVerboseDate,\r\n\t// `Intl.DateTimeFormat` for verbose date.\r\n\tverboseDateFormat,\r\n\tupdateInterval,\r\n\ttick,\r\n\tnow: nowProperty,\r\n\ttimeOffset,\r\n\tpolyfill,\r\n\r\n\t// React Component properties:\r\n\t// Use HTML `tooltip` attribute to show a verbose date tooltip.\r\n\ttooltip = true,\r\n\t// Use `<time/>` tag by default.\r\n\tcomponent: Component = Time,\r\n\t// `container` property name is deprecated, \r\n\t// use `wrapperComponent` property name instead.\r\n\tcontainer,\r\n\twrapperComponent,\r\n\twrapperProps,\r\n\t...rest\r\n}) {\r\n\tconst {\r\n\t\tdate,\r\n\t\tverboseDate,\r\n\t\tformattedDate\r\n\t} = useTimeAgo({\r\n\t\tdate: dateProperty,\r\n\t\tfuture,\r\n\t\ttimeStyle,\r\n\t\tround,\r\n\t\tminTimeLeft,\r\n\t\tlocale,\r\n\t\tlocales,\r\n\t\tformatVerboseDate,\r\n\t\tverboseDateFormat,\r\n\t\tupdateInterval,\r\n\t\ttick,\r\n\t\tnow: nowProperty,\r\n\t\ttimeOffset,\r\n\t\tpolyfill\r\n\t});\r\n\r\n\tconst result = (\r\n\t\t<Component\r\n\t\t\tdate={date}\r\n\t\t\tverboseDate={verboseDate}\r\n\t\t\ttooltip={tooltip}\r\n\t\t\t{...rest}>\r\n\t\t\t{formattedDate}\r\n\t\t</Component>\r\n\t)\r\n\r\n\tconst WrapperComponent = wrapperComponent || container\r\n\r\n\tif (WrapperComponent) {\r\n\t\treturn (\r\n\t\t\t<WrapperComponent\r\n\t\t\t\t{...wrapperProps}\r\n\t\t\t\tverboseDate={verboseDate}>\r\n\t\t\t\t{result}\r\n\t\t\t</WrapperComponent>\r\n\t\t)\r\n\t}\r\n\r\n\treturn result\r\n}\r\n\r\nReactTimeAgo.propTypes = {\r\n\t// `date: Date` or `timestamp: number`.\r\n\t// E.g. `new Date()` or `1355972400000`.\r\n\tdate: PropTypes.oneOfType([\r\n\t\tPropTypes.instanceOf(Date),\r\n\t\tPropTypes.number\r\n\t]).isRequired,\r\n\r\n\t// Preferred locale.\r\n\t// Is 'en' by default.\r\n\t// E.g. 'ru-RU'.\r\n\tlocale: PropTypes.string,\r\n\r\n\t// Alternatively to `locale`, one could pass `locales`:\r\n\t// A list of preferred locales (ordered).\r\n\t// Will choose the first supported locale from the list.\r\n\t// E.g. `['ru-RU', 'en-GB']`.\r\n\tlocales: PropTypes.arrayOf(PropTypes.string),\r\n\r\n\t// If set to `true`, then will stop at \"zero point\"\r\n\t// when going from future dates to past dates.\r\n\t// In other words, even if the `date` has passed,\r\n\t// it will still render as if `date` is `now`.\r\n\tfuture: PropTypes.bool,\r\n\r\n\t// Date/time formatting style.\r\n\t// See `javascript-time-ago` docs on \"Styles\" for more info.\r\n\t// E.g. 'round', 'round-minute', 'twitter', 'twitter-first-minute'.\r\n\ttimeStyle: styleType,\r\n\r\n\t// `round` parameter of `javascript-time-ago`.\r\n\t// See `javascript-time-ago` docs on \"Rounding\" for more info.\r\n\t// Examples: \"round\", \"floor\".\r\n\tround: PropTypes.string,\r\n\r\n\t// If specified, the time won't \"tick\" past this threshold (in seconds).\r\n\t// For example, if `minTimeLeft` is `60 * 60`\r\n\t// then the time won't \"tick\" past \"in 1 hour\".\r\n\tminTimeLeft: PropTypes.number,\r\n\r\n\t// A React component to render the relative time label.\r\n\t// Receives properties:\r\n\t// * date: Date — The date.\r\n\t// * verboseDate: string — Formatted verbose date.\r\n\t// * tooltip: boolean — The `tooltip` property of `<ReactTimeAgo/>` component.\r\n\t// * children: string — The relative time label.\r\n\t// * All \"unknown\" properties that have been passed to `<ReactTimeAgo/>` are passed through to this component.\r\n\tcomponent: PropTypes.elementType,\r\n\r\n\t// Whether to use HTML `tooltip` attribute to show a verbose date tooltip.\r\n\t// Is `true` by default.\r\n\t// Can be set to `false` to disable the native HTML `tooltip`.\r\n\ttooltip: PropTypes.bool,\r\n\r\n\t// Verbose date formatter.\r\n\t// By default it's `(date) => new Intl.DateTimeFormat(locale, {…}).format(date)`.\r\n\tformatVerboseDate: PropTypes.func,\r\n\r\n\t// `Intl.DateTimeFormat` format for formatting verbose date.\r\n\t// See `Intl.DateTimeFormat` docs for more info.\r\n\tverboseDateFormat: PropTypes.object,\r\n\r\n\t// (deprecated)\r\n\t// How often the component refreshes itself.\r\n\t// When not provided, will use `getNextTimeToUpdate()` feature\r\n\t// of `javascript-time-ago` styles to determine the update interval.\r\n\tupdateInterval: PropTypes.oneOfType([\r\n\t\tPropTypes.number,\r\n\t\tPropTypes.arrayOf(PropTypes.shape({\r\n\t\t\tthreshold: PropTypes.number,\r\n\t\t\tinterval: PropTypes.number.isRequired\r\n\t\t}))\r\n\t]),\r\n\r\n\t// (deprecated).\r\n\t// Set to `false` to disable automatic refresh of the component.\r\n\t// Is `true` by default.\r\n\t// I guess no one actually turns auto-update off, so this parameter is deprecated.\r\n\ttick: PropTypes.bool,\r\n\r\n\t// Allows setting a custom baseline for relative time measurement.\r\n\t// https://gitlab.com/catamphetamine/react-time-ago/-/issues/4\r\n\tnow: PropTypes.number,\r\n\r\n\t// Allows offsetting the `date` by an arbitrary amount of milliseconds.\r\n\t// https://gitlab.com/catamphetamine/react-time-ago/-/issues/4\r\n\ttimeOffset: PropTypes.number,\r\n\r\n\t// Pass `false` to use native `Intl.RelativeTimeFormat` / `Intl.PluralRules`\r\n\t// instead of the polyfilled ones in `javascript-time-ago`.\r\n\tpolyfill: PropTypes.bool,\r\n\r\n\t// (advanced)\r\n\t// A React Component to wrap the resulting `<time/>` React Element.\r\n\t// Receives `verboseDate` and `children` properties.\r\n\t// Also receives `wrapperProps`, if they're passed.\r\n\t// `verboseDate` can be used for displaying verbose date label\r\n\t// in an \"on mouse over\" (or \"on touch\") tooltip.\r\n\t// See the \"Tooltip\" readme section for more info.\r\n\t// Another example could be having `wrapperComponent`\r\n\t// being rerendered every time the component refreshes itself.\r\n\twrapperComponent: PropTypes.elementType,\r\n\r\n\t// Custom `props` passed to `wrapperComponent`.\r\n\twrapperProps: PropTypes.object\r\n}\r\n\r\n// The component schedules a next refresh every time it renders.\r\n// There's no need to rerender this component unless its props change.\r\nReactTimeAgo = React.memo(ReactTimeAgo)\r\n\r\nexport default ReactTimeAgo", "import React, { useMemo } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Time({\r\n\tdate,\r\n\tverboseDate,\r\n\ttooltip,\r\n\tchildren,\r\n\t...rest\r\n}, ref) {\r\n\tconst isoString = useMemo(() => date.toISOString(), [date])\r\n\treturn (\r\n\t\t<time\r\n\t\t\tref={ref}\r\n\t\t\t{...rest}\r\n\t\t\tdateTime={isoString}\r\n\t\t\ttitle={tooltip ? verboseDate : undefined}>\r\n\t\t\t{children}\r\n\t\t</time>\r\n\t)\r\n}\r\n\r\n// https://gitlab.com/catamphetamine/react-time-ago/-/issues/5\r\n//\r\n// Someone used this component with \"Material UI\"'s `<Tooltip/>` component,\r\n// and that component required `children` be `ref`-able.\r\n// https://github.com/mui-org/material-ui/blob/a9903917f919092f80d84075f39fb51d51f241f2/packages/mui-material/src/Tooltip/Tooltip.js#L494-L496\r\n// \r\n// That component seems to only be using that `ref-`ability to check whether \r\n// the `children` element qualifies for `:focus-visible` selector.\r\n// https://github.com/mui-org/material-ui/blob/a9903917f919092f80d84075f39fb51d51f241f2/packages/mui-utils/src/useIsFocusVisible.ts#L105\r\n//\r\nTime = React.forwardRef(Time)\r\n\r\nTime.propTypes = {\r\n\tdate: PropTypes.instanceOf(Date).isRequired,\r\n\tverboseDate: PropTypes.string,\r\n\ttooltip: PropTypes.bool.isRequired,\r\n\tchildren: PropTypes.string.isRequired\r\n}", "import { useEffect, useState, useRef, useCallback, useMemo } from 'react'\r\nimport TimeAgo from 'javascript-time-ago'\r\n\r\nimport getVerboseDateFormatter from './helpers/getVerboseDateFormatter.js'\r\nimport { getDate } from './helpers/date.js'\r\nimport getTimeAgo from './helpers/getTimeAgo.js'\r\n\r\nimport Updater from './Updater.js'\r\n\r\nexport default function useTimeAgo({\r\n\t// `date: Date` or `timestamp: number`.\r\n\t// E.g. `new Date()` or `1355972400000`.\r\n\tdate,\r\n\r\n\t// If set to `true`, then will stop at \"zero point\"\r\n\t// when going from future dates to past dates.\r\n\t// In other words, even if the `date` has passed,\r\n\t// it will still render as if `date` is `now`.\r\n\tfuture,\r\n\r\n\t// Preferred locale.\r\n\t// Is 'en' by default.\r\n\t// E.g. 'ru-RU'.\r\n\tlocale,\r\n\r\n\t// Alternatively to `locale`, one could pass `locales`:\r\n\t// A list of preferred locales (ordered).\r\n\t// Will choose the first supported locale from the list.\r\n\t// E.g. `['ru-RU', 'en-GB']`.\r\n\tlocales,\r\n\r\n\t// Date/time formatting style.\r\n\t// See `javascript-time-ago` docs on \"Styles\" for more info.\r\n\t// E.g. 'round', 'round-minute', 'twitter', 'twitter-first-minute'.\r\n\ttimeStyle,\r\n\r\n\t// `round` parameter of `javascript-time-ago`.\r\n\t// See `javascript-time-ago` docs on \"Rounding\" for more info.\r\n\t// Examples: \"round\", \"floor\".\r\n\tround,\r\n\r\n\t// If specified, the time won't \"tick\" past this threshold (in seconds).\r\n\t// For example, if `minTimeLeft` is `60 * 60`\r\n\t// then the time won't \"tick\" past \"in 1 hour\".\r\n\tminTimeLeft,\r\n\r\n\t// Verbose date formatter.\r\n\t// By default it's `(date) => new Intl.DateTimeFormat(locale, {…}).format(date)`.\r\n\tformatVerboseDate,\r\n\r\n\t// `Intl.DateTimeFormat` format for formatting verbose date.\r\n\t// See `Intl.DateTimeFormat` docs for more info.\r\n\tverboseDateFormat = DEFAULT_VERBOSE_DATE_FORMAT,\r\n\r\n\t// (deprecated)\r\n\t// How often the component refreshes itself.\r\n\t// When not provided, will use `getNextTimeToUpdate()` feature\r\n\t// of `javascript-time-ago` styles to determine the update interval.\r\n\tupdateInterval,\r\n\r\n\t// Set to `false` to disable automatic refresh of the component.\r\n\t// Is `true` by default.\r\n\t// I guess no one actually turns auto-update off, so this parameter is deprecated.\r\n\ttick = true,\r\n\r\n\t// \"Now\" timestamp.\r\n\t// E.g. `Date.now()`.\r\n\tnow: nowProperty,\r\n\r\n\t// Allows offsetting the `date` by an arbitrary amount of milliseconds.\r\n\t// https://gitlab.com/catamphetamine/react-time-ago/-/issues/4\r\n\ttimeOffset = 0,\r\n\r\n\t// Pass `false` to use native `Intl.RelativeTimeFormat` / `Intl.PluralRules`\r\n\t// instead of the polyfilled ones in `javascript-time-ago`.\r\n\t// The default value is `true` meaning that it uses polyfills for\r\n\t// `Intl.RelativeTimeFormat` / `Intl.PluralRules` (polyfills are from `javascript-time-ago`).\r\n\tpolyfill\r\n}) {\r\n\t// Get the list of preferred locales.\r\n\tconst preferredLocales = useMemo(() => {\r\n\t\t// Convert `locale` to `locales`.\r\n\t\tif (locale) {\r\n\t\t\tlocales = [locale]\r\n\t\t}\r\n\t\t// Add `javascript-time-ago` default locale.\r\n\t\treturn locales.concat(TimeAgo.getDefaultLocale())\r\n\t}, [\r\n\t\tlocale,\r\n\t\tlocales\r\n\t])\r\n\r\n\t// Create `javascript-time-ago` formatter instance.\r\n\tconst timeAgo = useMemo(() => {\r\n\t\treturn getTimeAgo(preferredLocales, { polyfill })\r\n\t}, [\r\n\t\tpreferredLocales,\r\n\t\tpolyfill\r\n\t])\r\n\r\n\t// The date or timestamp that was passed.\r\n\t// Convert timestamp to `Date`.\r\n\tdate = useMemo(() => getDate(date), [date])\r\n\r\n\t// Formats the `date`.\r\n\tconst formatDate = useCallback(() => {\r\n\t\tlet now = (nowProperty || Date.now()) - timeOffset\r\n\t\tlet stopUpdates\r\n\t\tif (future) {\r\n\t\t\tif (now >= date.getTime()) {\r\n\t\t\t\tnow = date.getTime()\r\n\t\t\t\tstopUpdates = true\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (minTimeLeft !== undefined) {\r\n\t\t\tconst maxNow = date.getTime() - minTimeLeft * 1000\r\n\t\t\tif (now > maxNow) {\r\n\t\t\t\tnow = maxNow\r\n\t\t\t\tstopUpdates = true\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet [formattedDate, timeToNextUpdate] = timeAgo.format(date, timeStyle, {\r\n\t\t\tgetTimeToNextUpdate: true,\r\n\t\t\tnow,\r\n\t\t\tfuture,\r\n\t\t\tround\r\n\t\t})\r\n\t\tif (stopUpdates) {\r\n\t\t\ttimeToNextUpdate = INFINITY\r\n\t\t} else {\r\n\t\t\t// Legacy compatibility: there used to be an `updateInterval` property.\r\n\t\t\t// That was before `getTimeToNextUpdate` feature was introduced in `javascript-time-ago`.\r\n\t\t\t// A default interval of one minute is introduced because\r\n\t\t\t// `getTimeToNextUpdate` feature may theoretically return `undefined`.\r\n\t\t\ttimeToNextUpdate = updateInterval || timeToNextUpdate || 60 * 1000 // A minute by default.\r\n\t\t}\r\n\t\treturn [formattedDate, now + timeToNextUpdate]\r\n\t}, [\r\n\t\tdate,\r\n\t\tfuture,\r\n\t\ttimeStyle,\r\n\t\tupdateInterval,\r\n\t\tround,\r\n\t\tminTimeLeft,\r\n\t\ttimeAgo,\r\n\t\tnowProperty\r\n\t])\r\n\r\n\tconst formatDateRef = useRef()\r\n\tformatDateRef.current = formatDate\r\n\r\n\tconst [_formattedDate, _nextUpdateTime] = useMemo(formatDate, [])\r\n\tconst [formattedDate, setFormattedDate] = useState(_formattedDate)\r\n\r\n\tconst updater = useRef()\r\n\r\n\tuseEffect(() => {\r\n\t\tif (tick) {\r\n\t\t\tupdater.current = Updater.add({\r\n\t\t\t\tgetNextValue: () => formatDateRef.current(),\r\n\t\t\t\tsetValue: setFormattedDate,\r\n\t\t\t\tnextUpdateTime: _nextUpdateTime\r\n\t\t\t})\r\n\t\t\treturn () => updater.current.stop()\r\n\t\t}\r\n\t}, [tick])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (updater.current) {\r\n\t\t\tupdater.current.forceUpdate()\r\n\t\t} else {\r\n\t\t\tconst [formattedDate] = formatDate()\r\n\t\t\tsetFormattedDate(formattedDate)\r\n\t\t}\r\n\t}, [formatDate])\r\n\r\n\t// Create verbose date formatter for the tooltip text.\r\n\tconst verboseDateFormatter = useMemo(() => {\r\n\t\treturn getVerboseDateFormatter(\r\n\t\t\tpreferredLocales, \r\n\t\t\tverboseDateFormat\r\n\t\t)\r\n\t}, [\r\n\t\tpreferredLocales,\r\n\t\tverboseDateFormat\r\n\t])\r\n\r\n\t// Format verbose date for the tooltip.\r\n\tconst verboseDate = useMemo(() => {\r\n\t\tif (formatVerboseDate) {\r\n\t\t\treturn formatVerboseDate(date)\r\n\t\t}\r\n\t\treturn verboseDateFormatter(date)\r\n\t}, [\r\n\t\tdate,\r\n\t\tformatVerboseDate,\r\n\t\tverboseDateFormatter\r\n\t])\r\n\r\n\treturn {\r\n\t\tdate,\r\n\t\tformattedDate,\r\n\t\tverboseDate\r\n\t};\r\n}\r\n\r\n// A thousand years is practically a metaphor for \"infinity\"\r\n// in the context of this component.\r\nconst YEAR = 365 * 24 * 60 * 60 * 1000\r\nconst INFINITY = 1000 * YEAR\r\n\r\n// `Intl.DateTimeFormat` for verbose date.\r\n// Formatted date example: \"Thursday, December 20, 2012, 7:00:00 AM GMT+4\"\r\nconst DEFAULT_VERBOSE_DATE_FORMAT = {\r\n\tweekday: 'long',\r\n\tday: 'numeric',\r\n\tmonth: 'long',\r\n\tyear: 'numeric',\r\n\thour: 'numeric',\r\n\tminute: '2-digit',\r\n\tsecond: '2-digit'\r\n\t// timeZoneName: 'short'\r\n};", "var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var cache = null;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (cache && cache.lastThis === this && isEqual(newArgs, cache.lastArgs)) {\n            return cache.lastResult;\n        }\n        var lastResult = resultFn.apply(this, newArgs);\n        cache = {\n            lastResult: lastResult,\n            lastArgs: newArgs,\n            lastThis: this,\n        };\n        return lastResult;\n    }\n    memoized.clear = function clear() {\n        cache = null;\n    };\n    return memoized;\n}\n\nexport { memoizeOne as default };\n", "/**\r\n * Whether can use `Intl.DateTimeFormat` for these `locales`.\r\n * Returns the first suitable one.\r\n * @param  {(string|string[])} locales\r\n * @return {?string} The first locale that can be used.\r\n */\r\nexport function intlDateTimeFormatSupportedLocale(locales) {\r\n\t/* istanbul ignore else */\r\n\tif (intlDateTimeFormatSupported()) {\r\n\t\treturn Intl.DateTimeFormat.supportedLocalesOf(locales)[0]\r\n\t}\r\n}\r\n\r\n/**\r\n * Whether can use `Intl.DateTimeFormat`.\r\n * @return {boolean}\r\n */\r\nexport function intlDateTimeFormatSupported() {\r\n\t// Babel transforms `typeof` into some \"branches\"\r\n\t// so istanbul will show this as \"branch not covered\".\r\n\t/* istanbul ignore next */\r\n\tconst isIntlAvailable = typeof Intl === 'object'\r\n\treturn isIntlAvailable && typeof Intl.DateTimeFormat === 'function'\r\n}\r\n", "/**\r\n * A basic in-memory cache.\r\n *\r\n * import Cache from 'javascript-time-ago/Cache'\r\n * const cache = new Cache()\r\n * const object = cache.get('key1', 'key2', ...) || cache.put('key1', 'key2', ..., createObject())\r\n */\r\nexport default class Cache {\r\n\tconstructor() {\r\n\t\tthis.cache = {}\r\n\t}\r\n\r\n\tget(...keys) {\r\n\t\tlet cache = this.cache\r\n\t\tfor (const key of keys) {\r\n\t\t\tif (typeof cache !== 'object') {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tcache = cache[key]\r\n\t\t}\r\n\t\treturn cache\r\n\t}\r\n\r\n\tput(...keys) {\r\n\t\tconst value = keys.pop()\r\n\t\tconst lastKey = keys.pop()\r\n\t\tlet cache = this.cache\r\n\t\tfor (const key of keys) {\r\n\t\t\tif (typeof cache[key] !== 'object') {\r\n\t\t\t\tcache[key] = {}\r\n\t\t\t}\r\n\t\t\tcache = cache[key]\r\n\t\t}\r\n\t\treturn cache[lastKey] = value\r\n\t}\r\n}", "import memoize from 'memoize-one'\r\n\r\nimport {\r\n\tintlDateTimeFormatSupported,\r\n\tintlDateTimeFormatSupportedLocale\r\n} from './locale.js'\r\n\r\nimport Cache from './cache.js'\r\n\r\nconst cache = new Cache()\r\n\r\nconst INTL_DATE_TIME_FORMAT_SUPPORTED = intlDateTimeFormatSupported()\r\nconst FALLBACK_VERBOSE_DATE_FORMATTER = date => date.toString()\r\n\r\n/**\r\n * Returns a verbose date formatter.\r\n * \r\n * @param {string} locale - Date formatting locale\r\n * @param {object} format - Output format\r\n * @param {string} format.day     - Day format\r\n * @param {string} format.month   - Month format\r\n * @param {string} format.year    - Year format\r\n * @param {string} format.weekday - Weekday format\r\n * @param {string} format.hour    - Hour format\r\n * @param {string} format.minute  - Minute format\r\n * @param {string} format.second  - Second format\r\n *\r\n * @returns {Function} `(date) -> string`.\r\n */\r\nfunction getVerboseDateFormatter(locales, format) {\r\n\t// Fall back to `date.toString()` for old web browsers.\r\n\t// https://caniuse.com/#search=intl\r\n\tif (!INTL_DATE_TIME_FORMAT_SUPPORTED) {\r\n\t\treturn FALLBACK_VERBOSE_DATE_FORMATTER\r\n\t}\r\n\r\n\t// If none of the `locales` are supported\r\n\t// a default system locale will be used.\r\n\tconst locale = resolveLocale(locales)\r\n\r\n\t// `Intl.DateTimeFormat` format caching key.\r\n\t// E.g. `\"{\"day\":\"numeric\",\"month\":\"short\",...}\"`.\r\n\t// Didn't benchmark what's faster:\r\n\t// creating a new `Intl.DateTimeFormat` instance\r\n\t// or stringifying a small JSON `format`.\r\n\t// Perhaps strigifying JSON `format` is faster.\r\n\tconst formatFingerprint = JSON.stringify(format)\r\n\r\n\t// Get `Intl.DateTimeFormat` instance for these `locale` and `format`.\r\n\t// (`locale` can be `undefined`, hence the `String(locale)` conversion)\r\n\tconst formatter = cache.get(String(locale), formatFingerprint) ||\r\n\t\tcache.put(String(locale), formatFingerprint, new Intl.DateTimeFormat(locale, format))\r\n\r\n\t// Return date formatter\r\n\treturn date => formatter.format(date)\r\n}\r\n\r\n// Even though `getVerboseDateFormatter()` function is called inside a\r\n// `useMemo()` hook, it's still invoked every time for different \r\n// `<ReactTimeAgo/>` elements on a page. There could be a lot of such\r\n// `<ReactTimeAgo/>` elements on a page. And `useMemo()` wouldn't speed up\r\n// the initial render. To work around that, simple argument-based memoization\r\n// is used.\r\nexport default memoize(getVerboseDateFormatter)\r\n\r\n// Caching locale resolving for optimizing pages \r\n// with a lot of `<ReactTimeAgo/>` elements (say, 100 or more).\r\n// `Intl.DateTimeFormat.supportedLocalesOf(locales)` is not instantaneous.\r\n// For example, it could be 25 milliseconds for 200 calls.\r\nconst resolvedLocales = {}\r\n\r\n/**\r\n * Resolves a list of possible locales to a single (\"best fit\") supported locale.\r\n * @param  {string[]} locales\r\n * @return {string}\r\n */\r\nfunction resolveLocale(locales) {\r\n\tconst localesFingerprint = locales.toString()\r\n\tif (resolvedLocales[localesFingerprint]) {\r\n\t\treturn resolvedLocales[localesFingerprint] \r\n\t}\r\n\treturn resolvedLocales[localesFingerprint] = intlDateTimeFormatSupportedLocale(locales)\r\n}", "/**\r\n * Converts value to a `Date`\r\n * @param {(number|Date)} value\r\n * @return {Date}\r\n */\r\nexport function getDate(value) {\r\n\treturn isDate(value) ? value : new Date(value)\r\n}\r\n\r\n/**\r\n * Converts value to a timestamp.\r\n * @param {(number|Date)} value\r\n * @return {number}\r\n */\r\nexport function getTime(value) {\r\n\treturn isDate(value) ? value.getTime() : value\r\n}\r\n\r\nfunction isDate(object) {\r\n\treturn object instanceof Date || isMockedDate(object)\r\n}\r\n\r\n// During testing via some testing libraries `Date`s aren't actually `Date`s.\r\n// https://github.com/catamphetamine/javascript-time-ago/issues/22\r\nexport function isMockedDate(object) {\r\n\treturn typeof object === 'object' && typeof object.getTime === 'function'\r\n}", "import TimeAgo from 'javascript-time-ago'\r\n\r\nimport Cache from './cache.js'\r\n\r\nconst TimeAgoCache = new Cache()\r\nexport default function getTimeAgo(preferredLocales, { polyfill }) {\r\n\t// `TimeAgo` instance creation is (hypothetically) assumed\r\n\t// a lengthy operation so the instances are cached and reused.\r\n\t// https://gitlab.com/catamphetamine/react-time-ago/-/issues/1\r\n\tconst key = String(preferredLocales) + ':' + String(polyfill)\r\n\treturn TimeAgoCache.get(key) ||\r\n\t\tTimeAgoCache.put(key, new TimeAgo(preferredLocales, { polyfill }))\r\n}", "// Manages the updates of all `<ReactTimeAgo/>` elements on a page.\r\n\r\n// The reasons for going with `requestAnimationFrame()`:\r\n// * `requestAnimationFrame` won't be called when a tab is in background.\r\n// * Chrome has bugs when handling `setTimeout()`: https://www.npmjs.com/package/request-animation-frame-timeout\r\n\r\n// `requestAnimationFrame()` polyfill for old browsers.\r\nimport requestAnimationFrame from 'raf'\r\n\r\nimport binarySearch from './helpers/binarySearch.js'\r\n\r\nexport default {\r\n\tinstances: [],\r\n\tadd(instance) {\r\n\t\tconst wasIdle = this.instances.length === 0\r\n\t\tadd(this.instances, instance)\r\n\t\tif (wasIdle) {\r\n\t\t\tthis.start()\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tstop: () => {\r\n\t\t\t\tremove(this.instances, instance)\r\n\t\t\t\tif (this.instances.length === 0) {\r\n\t\t\t\t\tthis.stop()\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tforceUpdate: () => {\r\n\t\t\t\tupdateInstance(instance, this.instances)\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\ttick() {\r\n\t\tconst now = Date.now()\r\n\t\twhile (true) {\r\n\t\t\tconst instance = this.instances[0]\r\n\t\t\tif (now >= instance.nextUpdateTime) {\r\n\t\t\t\tupdateInstance(instance, this.instances)\r\n\t\t\t} else {\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tscheduleNextTick() {\r\n\t\tthis.scheduledTick = requestAnimationFrame(() => {\r\n\t\t\tthis.tick()\r\n\t\t\tthis.scheduleNextTick()\r\n\t\t})\r\n\t},\r\n\tstart() {\r\n\t\tthis.scheduleNextTick()\r\n\t},\r\n\tstop() {\r\n\t\trequestAnimationFrame.cancel(this.scheduledTick)\r\n\t}\r\n}\r\n\r\nfunction _updateInstance(instance) {\r\n\tconst [value, nextUpdateTime] = instance.getNextValue()\r\n\tinstance.setValue(value)\r\n\tinstance.nextUpdateTime = nextUpdateTime\r\n}\r\n\r\nfunction updateInstance(instance, instances) {\r\n\t_updateInstance(instance)\r\n\tremove(instances, instance)\r\n\tadd(instances, instance)\r\n}\r\n\r\nfunction add(instances, instance) {\r\n\tconst i = findTargetIndex(instances, instance)\r\n\tinstances.splice(i, 0, instance)\r\n}\r\n\r\nfunction remove(instances, instance) {\r\n\tconst i = instances.indexOf(instance)\r\n\tinstances.splice(i, 1)\t\r\n}\r\n\r\nfunction findTargetIndex(instances, instance) {\r\n\tconst { nextUpdateTime } = instance\r\n\treturn binarySearch(instances, (instance) => {\r\n\t\tif (instance.nextUpdateTime === nextUpdateTime) {\r\n\t\t\treturn 0\r\n\t\t} else if (instance.nextUpdateTime > nextUpdateTime) {\r\n\t\t\treturn 1\r\n\t\t} else {\r\n\t\t\treturn -1\r\n\t\t}\r\n\t})\r\n}", "// \"Binary\" search in a sorted array.\r\nexport default function (array, test) {\r\n\tif (array.length === 0) {\r\n\t\treturn 0\r\n\t}\r\n\r\n\tlet min = 0\r\n\tlet max = array.length - 1\r\n\tlet guess\r\n\r\n\twhile (min <= max) {\r\n\t\tguess = Math.floor((max + min) / 2)\r\n\r\n\t\tconst result = test(array[guess])\r\n\t\tif (result === 0) {\r\n\t\t\treturn guess\r\n\t\t}\r\n\t\telse if (result < 0) {\r\n\t\t\tmin = guess + 1\r\n\t\t\tif (min > max) {\r\n\t\t\t\treturn min\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmax = guess - 1\r\n\t\t\tif (max < min) {\r\n\t\t\t\treturn min\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// return -1\r\n\t// return min\r\n}", "import PropTypes from 'prop-types'\r\n\r\nconst {\r\n\toneOfType,\r\n\tarrayOf,\r\n\tstring,\r\n\tnumber,\r\n\tshape,\r\n\tfunc\r\n} = PropTypes\r\n\r\n// The first step isn't required to define `minTime` or `test()`.\r\nconst step = oneOfType([\r\n\tshape({\r\n\t\tminTime: number,\r\n\t\tformatAs: string.isRequired\r\n\t}),\r\n\tshape({\r\n\t\ttest: func,\r\n\t\tformatAs: string.isRequired\r\n\t}),\r\n\tshape({\r\n\t\tminTime: number,\r\n\t\tformat: func.isRequired\r\n\t}),\r\n\tshape({\r\n\t\ttest: func,\r\n\t\tformat: func.isRequired\r\n\t})\r\n])\r\n\r\n// Formatting style.\r\nexport const style = oneOfType([\r\n\t// Not using `oneOf()` here, because that way\r\n\t// this package wouldn't support some hypothetical\r\n\t// new styles added to `javascript-time-ago` in some future.\r\n\tstring,\r\n\tshape({\r\n\t\tsteps: arrayOf(step).isRequired,\r\n\t\tlabels: oneOfType([\r\n\t\t\tstring,\r\n\t\t\tarrayOf(string)\r\n\t\t]).isRequired,\r\n\t\tround: string\r\n\t})\r\n])"],
  "mappings": "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",
  "names": ["i", "import_react", "import_prop_types", "ref", "date", "verboseDate", "tooltip", "children", "rest", "isoString", "useMemo", "toISOString", "React", "undefined", "Time", "forwardRef", "propTypes", "PropTypes", "instanceOf", "Date", "isRequired", "string", "bool", "import_react", "isEqual", "cache", "intlDateTimeFormatSupportedLocale", "locales", "intlDateTimeFormatSupported", "Intl", "DateTimeFormat", "supportedLocalesOf", "isIntlAvailable", "Cache", "cache", "keys", "key", "_typeof", "value", "pop", "lastKey", "cache", "Cache", "INTL_DATE_TIME_FORMAT_SUPPORTED", "intlDateTimeFormatSupported", "FALLBACK_VERBOSE_DATE_FORMATTER", "date", "toString", "getVerboseDateFormatter", "locales", "format", "locale", "resolveLocale", "formatFingerprint", "JSON", "stringify", "formatter", "get", "String", "put", "Intl", "DateTimeFormat", "memoize", "resolvedLocales", "localesFingerprint", "intlDateTimeFormatSupportedLocale", "getDate", "value", "isDate", "Date", "isDate", "object", "Date", "isMockedDate", "_typeof", "getTime", "TimeAgoCache", "Cache", "preferredLocales", "polyfill", "key", "String", "get", "put", "TimeAgo", "array", "test", "length", "min", "max", "guess", "Math", "floor", "result", "instances", "add", "instance", "wasIdle", "length", "start", "stop", "remove", "forceUpdate", "updateInstance", "tick", "now", "Date", "nextUpdateTime", "scheduleNextTick", "scheduledTick", "requestAnimationFrame", "cancel", "_updateInstance", "getNextValue", "value", "setValue", "i", "findTargetIndex", "splice", "indexOf", "binarySearch", "date", "future", "locale", "locales", "timeStyle", "round", "minTimeLeft", "formatVerboseDate", "verboseDateFormat", "DEFAULT_VERBOSE_DATE_FORMAT", "updateInterval", "tick", "nowProperty", "now", "timeOffset", "polyfill", "preferredLocales", "useMemo", "concat", "TimeAgo", "getDefaultLocale", "timeAgo", "getTimeAgo", "getDate", "formatDate", "useCallback", "Date", "stopUpdates", "getTime", "undefined", "maxNow", "format", "getTimeToNextUpdate", "_slicedToArray", "formattedDate", "timeToNextUpdate", "INFINITY", "formatDateRef", "useRef", "current", "_formattedDate", "_nextUpdateTime", "useState", "setFormattedDate", "updater", "useEffect", "Updater", "add", "getNextValue", "setValue", "nextUpdateTime", "stop", "forceUpdate", "verboseDateFormatter", "getVerboseDateFormatter", "verboseDate", "YEAR", "weekday", "day", "month", "year", "hour", "minute", "second", "import_prop_types", "oneOfType", "PropTypes", "arrayOf", "string", "number", "shape", "func", "step", "minTime", "formatAs", "isRequired", "test", "format", "style", "steps", "labels", "round", "ReactTimeAgo", "dateProperty", "date", "future", "timeStyle", "round", "minTimeLeft", "locale", "locales", "formatVerboseDate", "verboseDateFormat", "updateInterval", "tick", "nowProperty", "now", "timeOffset", "polyfill", "tooltip", "component", "Component", "Time", "container", "wrapperComponent", "wrapperProps", "rest", "_objectWithoutProperties", "_excluded", "useTimeAgo", "verboseDate", "formattedDate", "result", "React", "_extends", "WrapperComponent", "propTypes", "PropTypes", "oneOfType", "instanceOf", "Date", "number", "isRequired", "string", "arrayOf", "bool", "styleType", "elementType", "func", "object", "shape", "threshold", "interval", "memo"]
}
